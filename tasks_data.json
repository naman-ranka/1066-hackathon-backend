{
    "Task": [
        {
            "id": 2,
            "title": "Make the Upload Receipt Button a Pop-Up",
            "description": "Create a modal to choose between Direct LLM, OCR+LLM (Single), and OCR+LLM (Multiple) for receipt processing.",
            "status": "in_progress",
            "task_type": "receipt_upload_popup",
            "assigned_to": "2",
            "due_date": null,
            "estimated_hours": null,
            "actual_hours": null,
            "related_app": "frontend",
            "related_file": "components/BillDetails.jsx, components/ReceiptUploadModal.jsx",
            "api_endpoint": null,
            "ocr_engine": null,
            "is_bill_splitting_task": true
        },
        {
            "id": 3,
            "title": "Implement Tesseract-based OCR",
            "description": "Complete the Tesseract OCR script and write unit tests.",
            "status": "in_progress",
            "task_type": "ocr_script",
            "assigned_to": "naman",
            "due_date": null,
            "estimated_hours": null,
            "actual_hours": null,
            "related_app": "llm",
            "related_file": "llm/multipleimageocr.py, llm/tests.py",
            "api_endpoint": null,
            "ocr_engine": "tesseract",
            "is_bill_splitting_task": true
        },
        {
            "id": 4,
            "title": "Write Backend API for Sending Images",
            "description": "Create API Endpoint for image upload.",
            "status": "not_started",
            "task_type": "api_endpoint",
            "assigned_to": "2",
            "due_date": null,
            "estimated_hours": null,
            "actual_hours": null,
            "related_app": "llm",
            "related_file": "llm/views.py, llm/urls.py, llm/serializers.py",
            "api_endpoint": "/api/llm/upload-receipt/",
            "ocr_engine": null,
            "is_bill_splitting_task": true
        },
        {
            "id": 5,
            "title": "Integrate Both OCR Scripts",
            "description": "Centralize the logic for calling Tesseract-based OCR or Google-based OCR in llm/utils.py.",
            "status": "not_started",
            "task_type": "ocr_script",
            "assigned_to": "2",
            "due_date": null,
            "estimated_hours": null,
            "actual_hours": null,
            "related_app": "llm",
            "related_file": "llm/utils.py, llm/multipleimageocr.py, llm/ocrgoogle.py",
            "api_endpoint": null,
            "ocr_engine": null,
            "is_bill_splitting_task": true
        },
        {
            "id": 6,
            "title": "Update Views to Use OCR Scripts Dynamically",
            "description": "Extend your parse_receipt (or similar) view(s) so it looks at a request parameter, e.g. ?engine=tesseract or ?engine=google, then calls the correct OCR method.",
            "status": "not_started",
            "task_type": "api_endpoint",
            "assigned_to": "2",
            "due_date": null,
            "estimated_hours": null,
            "actual_hours": null,
            "related_app": "llm",
            "related_file": "llm/views.py, llm/urls.py",
            "api_endpoint": "/api/llm/upload-receipt/",
            "ocr_engine": null,
            "is_bill_splitting_task": true
        },
        {
            "id": 7,
            "title": "Create Models for Groups",
            "description": "Add the concept of a Group to your system so multiple participants can belong to a group (e.g., group of friends, work colleagues).",
            "status": "not_started",
            "task_type": "model_creation",
            "assigned_to": "naman",
            "due_date": null,
            "estimated_hours": null,
            "actual_hours": null,
            "related_app": "bills",
            "related_file": "bills/models.py",
            "api_endpoint": null,
            "ocr_engine": null,
            "is_bill_splitting_task": true
        },
        {
            "id": 8,
            "title": "Design Authentication System",
            "description": "Enable user login for participants, use Django\u2019s best practices for auth, and integrate with React.",
            "status": "not_started",
            "task_type": "authentication",
            "assigned_to": "2",
            "due_date": null,
            "estimated_hours": null,
            "actual_hours": null,
            "related_app": "accounts",
            "related_file": "accounts/ , settings.py",
            "api_endpoint": null,
            "ocr_engine": null,
            "is_bill_splitting_task": true
        },
        {
            "id": 9,
            "title": "Update Prompt and Test for New Walmart Bill",
            "description": "Tweak your existing prompt.txt or prompt1.txt in llm/prompts to handle Walmart-style receipts, and test it.",
            "status": "not_started",
            "task_type": "prompt_tuning",
            "assigned_to": "2",
            "due_date": null,
            "estimated_hours": null,
            "actual_hours": null,
            "related_app": "llm",
            "related_file": "llm/prompts/prompt.txt, llm/prompts/prompt1.txt, llm/tests.py",
            "api_endpoint": null,
            "ocr_engine": null,
            "is_bill_splitting_task": true
        },
        {
            "id": 10,
            "title": "Make the Split Type a Different Column",
            "description": "Refactor the Split Type interface in the items table so it\u2019s visually separated or in a separate column.",
            "status": "not_started",
            "task_type": "frontend_ui",
            "assigned_to": "2",
            "due_date": null,
            "estimated_hours": null,
            "actual_hours": null,
            "related_app": "frontend",
            "related_file": "ItemsSection.jsx",
            "api_endpoint": null,
            "ocr_engine": null,
            "is_bill_splitting_task": true
        },
        {
            "id": 11,
            "title": "Add Quick Buttons in Items Section",
            "description": "Provide a fast way to set \u201csplit equally\u201d for all items at once.",
            "status": "not_started",
            "task_type": "frontend_ui",
            "assigned_to": "2",
            "due_date": null,
            "estimated_hours": null,
            "actual_hours": null,
            "related_app": "frontend",
            "related_file": "ItemsSection.jsx",
            "api_endpoint": null,
            "ocr_engine": null,
            "is_bill_splitting_task": true
        },
        {
            "id": 12,
            "title": "Add Totals Row in Items Table",
            "description": "Show a final row in the table with sums for quantity, price, tax, etc.",
            "status": "not_started",
            "task_type": "frontend_ui",
            "assigned_to": "2",
            "due_date": null,
            "estimated_hours": null,
            "actual_hours": null,
            "related_app": "frontend",
            "related_file": "ItemsSection.jsx",
            "api_endpoint": null,
            "ocr_engine": null,
            "is_bill_splitting_task": true
        }
    ]
}